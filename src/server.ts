// server.ts

import express from "express";
import cors from "cors";
import dotenv from "dotenv";

// Importa o roteador principal que agrega a maioria das suas rotas (menu, missÃµes, etc.)
// O caminho Ã© "./src/routes/index" porque server.ts estÃ¡ na raiz e index.ts estÃ¡ em src/routes/.
import apiRoutes from "../src/routes/index";

// Importa as rotas de usuÃ¡rio/autenticaÃ§Ã£o separadamente,
// pois elas serÃ£o montadas sob um prefixo diferente (/auth).
import userRoutes from "../src/routes/userRoutes";

// Carrega as variÃ¡veis de ambiente do arquivo .env
dotenv.config();

const app = express();

// ConfiguraÃ§Ã£o do CORS: Permite que seu frontend (http://127.0.0.1:5500) se comunique com o backend.
app.use(cors({
  origin: "http://127.0.0.1:5500", // A origem exata do seu frontend (baseado nos erros anteriores)
  methods: ["GET", "POST", "PUT", "DELETE", "PATCH"], // MÃ©todos HTTP permitidos
  allowedHeaders: ["Content-Type", "Authorization"], // CabeÃ§alhos permitidos nas requisiÃ§Ãµes
  credentials: true // Importante para permitir o envio de cookies ou credenciais (se usados)
}));

// Middleware para fazer o parse do corpo das requisiÃ§Ãµes em formato JSON
app.use(express.json());

// --- DefiniÃ§Ã£o e Montagem das Rotas ---

// Monta as rotas de usuÃ¡rio/autenticaÃ§Ã£o sob o prefixo "/auth".
// Isso significa que router.post("/login") em userRoutes.ts serÃ¡ acessÃ­vel via POST /auth/login.
// E router.post("/register") em userRoutes.ts serÃ¡ acessÃ­vel via POST /auth/register.
app.use("/auth", userRoutes);

// Monta as outras rotas (menu, notificaÃ§Ãµes, missÃµes, compras) sob o prefixo "/api".
// Isso significa que as rotas definidas em src/routes/index.ts (que agrega as demais)
// serÃ£o acessÃ­veis comeÃ§ando com /api. Ex: GET /api/menu, POST /api/missions.
app.use("/api", apiRoutes);

// Rota de teste bÃ¡sica para a raiz do servidor (acessÃ­vel via GET /)
app.get("/", (req, res) => {
  res.send("Servidor Express rodando com sucesso!");
});

// InÃ­cio do Servidor
const PORT = process.env.PORT || 3000; // Usa a porta do ambiente ou 3000 por padrÃ£o
app.listen(PORT, () => {
  console.log(`ðŸš€ Servidor rodando em http://localhost:${PORT}`);
  console.log(`ðŸ•’ Hora atual: ${new Date().toLocaleString('pt-BR')}`);
});